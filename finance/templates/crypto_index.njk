{% extends "static/lm.njk" %}


{% set activePage="crypto" %}
{% set headingCategory="Dashboard" %}
{% set headingHeading="Crypto" %}
{% set title="Crypto" %}


{% block head %}
    <script src="{{ static('js/line_chart_2_axes.js') }}" api-data="{{ url('crypto:api_data_index') }}"></script>
    <script src="{{ static('js/pie_chart.js') }}" api-data="{{ url('crypto:api_data_assets') }}"></script>
{% endblock %}


{% block chart %}
    <div class="vs-3"></div>
    <canvas class="console--target" id="line_chart"></canvas>
    <canvas class="console--target console--is-hidden" id="pie_chart"></canvas>
    <div class="vs-3"></div>
    <hr class="hr"> 
{% endblock %}


{% block main %}


    {% import "modules/table.njk" as tg %}
    {% import "modules/button.njk" as bg %}
    {% import "modules/card.njk" as cg %}
    {% import "modules/timespan.njk" as tsg %}
    {% import "modules/modal.njk" as mg %}
    {% import "modules/console.njk" as cog %}

    
    {%- set addAccountButton=bg.modalButton("Add Account", "#addAccount") -%}
    {%- set addTradeButton=bg.modalButton("Buy/Sell", "#addTrade") -%}
    {%- set addTransactionButton=bg.modalButton("Send/Receive", "#addTransaction") -%}
    {%- set deleteAccountButton=bg.modalButton("Delete Account", "#deleteAccount") -%}
    {%- set addAssetButton=bg.modalButton("Add Asset", "#addAsset") -%}
    {%- set removeAssetButton=bg.modalButton("Remove Asset", "#removeAsset") -%}
    {%- set addTimespanButton=bg.modalButton("Add Timespan", "#addTimespan") -%}
    {%- set updateButton=bg.hrefButton("Update", url("crypto:update_movies")) -%}
    {%- set resetButton=bg.hrefButton("Reset", url("crypto:reset_movies")) -%}


    <div class="vs-1"></div>


    <div class="center-box">
        <div class="console" data-toggle="buttons">
            <button class="console--button {{ cog.isActive(console, 'console-main') }}" type="button" data-target="#stats, #line_chart">Stats</button>
            <button class="console--button {{ cog.isActive(console, 'accounts') }}" type="button" data-target="#accounts, #line_chart">Accounts</button>
            <button class="console--button {{ cog.isActive(console, 'assets') }}" type="button" data-target="#assets, #pie_chart">Assets</button>
            <button class="console--button {{ cog.isActive(console, 'timespans') }}" type="button" data-target="#timespans, #line_chart">Time Spans</button>
        </div>
    </div> 
    

    <div class="vs-3"></div>
 
    
    <div class="wrapper console--target {{ cog.isHidden(console, 'console-main') }}" id="stats">
        {{ hg.smallLmHeading("Stats", buttons=[updateButton, resetButton]) }}
        <div class="vs-1"></div>
        <div class="items-box">
            {%- set data=movie.get_values(user, ["cs", "g", "v", "cr", "twr"]) -%}
            {{ cg.statsCard("Invested Capital", data.cs) }}
            {{ cg.statsCard("Profit", data.g) }}
            {{ cg.statsCard("Value", data.v) }}
            {{ cg.statsCard("Current Return", data.cr) }}
            {{ cg.statsCard("Time Weighted Return", data.twr)}}
        </div>
        {% if timespan.start_date %}
            <div class="vs-3"></div>
            {{ hg.smallLmHeading(timespan.name, right=timespan.get_start_date() + " - " + timespan.get_end_date()) }}
            <div class="vs-1"></div>
            <div class="items-box">
                {% with data=movie.get_values(user, ["cs", "g", "v", "cr", "twr"], timespan) %}
                    {{ cg.statsCard("Invested Capital", data.cs) }}
                    {{ cg.statsCard("Profit", data.g) }}
                    {{ cg.statsCard("Value", data.v) }}
                    {{ cg.statsCard("Current Return", data.cr) }}
                    {{ cg.statsCard("Time Weighted Return", data.twr)}}
                {% endwith %}
            </div>
        {% endif %}
    </div>
    
    
    <div class="wrapper console--target {{ cog.isHidden(console, 'accounts') }}" id="accounts">
        {{ hg.smallLmHeading("Accounts", buttons=[addAccountButton, deleteAccountButton]) }}
        <div class="scrollbar-box">
            <table class="table">
                {{ tg.head(["Account", "Assets Value", "Action"]) }}
                <tbody class="table--body">
                    {% for account, movie in accounts_movies %}
                        {% set tablebuttons %}
                            {{ bg.modalButton("Edit", "#editAccount"+account.slug) }}
                            {{ mg.djangoModal("Edit Account", "editAccount"+account.slug, url("crypto:edit_account", args=[account.slug])) }}
                        {% endset %} 
                        {% set name %}
                            <a href="{{ url('crypto:account', args=[ account.slug, ]) }}" class="link-bold">{{ account.name }}</a>
                        {% endset %} 
                        {%- set values=movie.get_values(user, ["v"]) -%}
                        {{ tg.row([name|safe, values.v, tablebuttons|safe]) }}
                    {% endfor %}
                </tbody>
            </table>
        </div>
    </div>
    

    <div class="wrapper console--target {{ cog.isHidden(console, 'assets') }}" id="assets">
        {{ hg.smallLmHeading("Assets", buttons=[addAssetButton, removeAssetButton]) }}
        <div class="scrollbar-box">
            <table class="table">
                {{ tg.head(["Asset", "Current Price", "Amount", "Value", "Profit", "Yield", "Action"]) }}
                <tbody class="table--body">
                    {% for asset, movie in assets_movies %}
                        {% set tablebuttons %}
                            <div class="table--buttons">
                                {{ addTradeButton }}
                                <div class="hs-1"></div>
                                {{ addTransactionButton }}
                            </div> 
                        {% endset %}
                        {% set name %}
                            <a href="{{ url('crypto:asset', args=[ asset.slug, ]) }}" class="link-bold">{{ asset.get_name() }}</a>
                        {% endset %} 
                        {%- set assetData = movie.get_values(user, ["p", "ca", "v", "g", "cr"]) -%}
                        {{ tg.row([name, assetData.p, assetData.ca, assetData.v, assetData.g, assetData.cr, tablebuttons | safe]) }}
                    {% endfor %}
                </tbody>
            </table>
        </div>
    </div>


    <div class="wrapper console--target {{ cog.isHidden(console, 'timespans') }}" id="timespans">
        {{ hg.smallLmHeading("Timespans", buttons=[addTimespanButton]) }}
        <div class="scrollbar-box">
            <table class="table">
                {{ tg.head(["Name", "Start Date", "End Date", "Action"]) }}
                <tbody class="table--body">
                    {% for timespan in timespans %}
                        {% set tablebuttons %}
                            <div class="table--buttons">
                                {{ tsg.setActiveCryptoButton(timespan, csrf_token) }}
                                <div class="hs-1"></div>
                                {{ tsg.deleteButton(timespan, csrf_token) }}
                            </div>
                            {{ mg.djangoModal("Delete", "deleteTimespan"+timespan.pk|string, url("crypto:delete_timespan", args=[timespan.pk])) }}
                        {% endset %} 
                        {{ tg.row([timespan.name, timespan.get_start_date(), timespan.get_end_date(), tablebuttons|safe]) }}
                    {% endfor %}
                </tbody>
            </table>
        </div>
    </div>


{% endblock %} 


{% block modals %}   
    {% import "modules/modal.njk" as mg %}
    {{ mg.djangoModal("Add Timespan", "addTimespan", url("crypto:add_timespan")) }}
    {{ mg.djangoModal("Add Account", "addAccount", url("crypto:add_account")) }}
    {{ mg.djangoModal("Delete Account", "deleteAccount", url("crypto:delete_account")) }}
    {{ mg.djangoModal("Add Trade", "addTrade", url("crypto:add_trade")) }}
    {{ mg.djangoModal("Add Transaction", "addTransaction", url("crypto:add_transaction")) }}
    {{ mg.djangoModal("Add Asset", "addAsset", url("crypto:add_asset")) }}
    {{ mg.djangoModal("Remove Asset", "removeAsset", url("crypto:remove_asset")) }}
{% endblock %}
