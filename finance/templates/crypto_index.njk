{% extends "static/lm.njk" %}


{% set activePage="crypto" %}
{% set headingCategory="Dashboard" %}
{% set headingHeading="Crypto" %}
{% set title="Crypto" %}


{% block head %}
    <script src="{{ static('js/line_chart_2_axes.js') }}" api-data="{{ url('crypto:api_data_index', args=[user.slug,]) }}"></script>
    <script src="{{ static('js/pie_chart.js') }}" api-data="{{ url('crypto:api_data_assets', args=[user.slug,]) }}"></script>
{% endblock %}


{% block chart %}
    <div class="vs-3"></div>
    <canvas class="console-target console_accounts console_stats console_timespans" id="line_chart"></canvas>
    <canvas class="console-target console_assets is-hidden" id="pie_chart"></canvas>
    <div class="vs-3"></div>
    <hr class="hr"> 
{% endblock %}


{% block main %}


    {% import "modules/table.njk" as table %}
    {% import "modules/buttons.njk" as buttons %}
    {% import "modules/button.njk" as button %}
    {% import "modules/cards.njk" as cards %}
    {% import "modules/timespan.njk" as tg %}

    
    {%- set addAccountButton=button.modalButton("Add Account", "#addAccount") -%}
    {%- set deleteAccountButton=button.modalButton("Delete Account", "#deleteAccount") -%}
    {%- set addAssetButton=button.modalButton("Add Asset", "#addAsset") -%}
    {%- set removeAssetButton=button.modalButton("Remove Asset", "#removeAsset") -%}
    {%- set addPrivateAssetButton=button.modalButton("Add Private Asset", "#addPrivateAsset") -%}
    {%- set deletePrivateAssetButton=button.modalButton("Delete Private Asset", "#deletePrivateAsset") -%}
    {%- set updateButton=button.hrefButton("Update", url("crypto:update_movies", args=[user.slug])) -%}


    <div class="vs-1"></div>


    <div class="center-box">
        <div class="console" data-toggle="buttons">
            <label class="console--button active" data-target=".console_stats">
                <input type="radio">Stats
            </label>
            <label class="console--button" data-target=".console_accounts">
                <input type="radio">Accounts
            </label>
            <label class="console--button" data-target=".console_assets">
                <input type="radio">Assets
            </label>
            <label class="console--button" data-target=".console_timespans">
                <input type="radio">Time Spans
            </label>
        </div>
    </div> 
    

    <div class="vs-3"></div>
 
    
    <div class="wrapper console-target console_stats">
        {{ hg.smallLmHeading("Stats", buttons=[updateButton]) }}
        <div class="vs-1"></div>
        <div class="items-box">
            {%- set depotData = movie.get_values(user, ["cs", "g", "v", "cr", "ttwr"]) -%}
            {{ cards.statsCard("Invested Capital", depotData.cs, ext=user.currency) }}
            {{ cards.statsCard("Profit", depotData.g, ext=user.currency) }}
            {{ cards.statsCard("Value", depotData.v, ext=user.currency) }}
            {{ cards.statsCard("Current Return", depotData.cr, ext="%") }}
            {{ cards.statsCard("True time weighted return", depotData.ttwr, ext="%")}}
        </div>
        {% if timespan.start_date %}
            <div class="vs-3"></div>
            {{ hg.smallLmHeading(timespan.name) }}
            <div class="vs-1"></div>
            <div class="items-box">
                {% with data=movie.get_values(user, ["g", "cr", ], timespan) %}
                    {%- set heading=data.start_date+"-"+data.end_date -%}
                    {% set value %}
                        Profit: {{ data.g }} <br>
                        Current Return: {{ data.cr }}
                    {% endset %}
                    {{ cards.statsCard(heading, value) }}
                {% endwith %}
            </div>
        {% endif %}
    </div>
    
    
    <div class="wrapper console-target is-hidden console_accounts">
        {{ hg.smallLmHeading("Stats", buttons=[addAccountButton, deleteAccountButton]) }}
        <table class="table">
            {{ table.head(["Account", "Assets Value", "Action"]) }}
            <tbody class="table--body">
                {% for account, movie in accounts_movies %}
                    {% set name %}
                        <a href="{{ url('crypto:account', args=[user.slug, account.slug, ]) }}" class="link-bold">{{ account.name }}</a>
                    {% endset %} 
                    {% set value %}
                        {{ movie.get_values(user, ["v",])["v"] }} {{ user.currency }}
                    {% endset %}
                    {% set tablebuttons %}
                        <div class="d-flex flex-row">
                            {% set data %}
                                {% raw %} { {% endraw %}
                                    'pk': '{{ account.pk }}', 
                                    'name': '{{ account.name }}'
                                {% raw %} } {% endraw %}
                            {% endset %}
                            {{ buttons.buttonModalNew(text="Edit", dataTarget="#editAccount", data=data) }}
                        </div>  
                    {% endset %} 
                    {{ table.row([name|safe, value, tablebuttons | safe]) }}
                {% endfor %}
            </tbody>
        </table>
    </div>
    

    <div class="wrapper console-target is-hidden console_assets">
        {{ hg.smallLmHeading("Assets", buttons=[addAssetButton, removeAssetButton, addPrivateAssetButton, deletePrivateAssetButton]) }}
        <table class="table">
            {{ table.head(["Asset", "Current Price", "Amount", "Value", "Profit", "Yield", "Action"]) }}
            <tbody class="table--body">
                {% for asset, movie in assets_movies %}
                    {% set tablebuttons %}
                        <div class="d-flex flex-row">
                            {{ buttons.buttonModal(text="Buy/Sell", dataTarget="#addTrade", data="pk=" + asset.pk|string) }} 
                            {% if asset.private_symbol %}
                                <div class="hs-1"></div>
                                {% set data %}
                                    {% raw %} { {% endraw %}
                                        'pk': '{{ asset.pk }}', 
                                        'private_name': '{{ asset.private_name }}',
                                        'private_symbol': '{{ asset.private_symbol }}'
                                    {% raw %} } {% endraw %}
                                {% endset %}
                                {{ buttons.buttonModalNew(text="Edit", dataTarget="#editPrivateAsset", data=data) }} 
                            {% endif %}
                        </div> 
                    {% endset %}
                    {% set name %}
                        <a href="{{ url('crypto:asset', args=[user.slug, asset.slug, ]) }}" class="link-bold">{{ asset.get_name() }}</a>
                    {% endset %} 
                    {%- set assetData = movie.get_values(user, ["p", "ca", "v", "g", "cr"]) -%}
                    {{ table.row([name, assetData.p, assetData.ca, assetData.v, assetData.g, assetData.cr, tablebuttons | safe]) }}
                {% endfor %}
            </tbody>
        </table>
    </div>


    <div class="wrapper console-target is-hidden console_timespans">
        {{ hg.smallLmHeading("Timespans") }}
        <div class="vs-1"></div>
        <ul class="timespans">
            {% for ts in timespans %} 
                {{ tg.timespan(ts, depot, url('crypto:set_timespan', args=[user.slug,]), url('crypto:delete_timespan', args=[user.slug,]), reverse, csrf_token) }}
            {% endfor %}
            {{ tg.createTimespan(False, url('crypto:add_timespan', args=[user.slug,]), reverse, csrf_token) }}
        </ul>
    </div>


{% endblock %} 


{% block modals %}
    {% import "modules/crypto/modals.njk" as modals %}
    {{ modals.addAccountModal(user, csrf_token) }}
    {{ modals.editAccountModal(user, csrf_token) }}
    {{ modals.deleteAccountModal(user, accounts, csrf_token) }}
    {{ modals.addAssetModal(user, asset_symbol_choices, csrf_token) }}
    {{ modals.addPrivateAssetModal(user, csrf_token) }}
    {{ modals.editPrivateAssetModal(user, csrf_token) }}
    {{ modals.removeAssetModal(user, public_assets, csrf_token) }}
    {{ modals.deletePrivateAssetModal(user, private_assets, csrf_token) }}
    {{ modals.addTradeModal(user, accounts, assets, csrf_token) }}
{% endblock %}
