{% extends "static/lm.njk" %}


{% set activePage="settings" %}
{% set headingCategory="User" %}
{% set headingHeading="Settings" %}
{% set title="Settings" %}


{% block main %} 
	

	{% import "modules/button.njk" as bg %}
	{% import "modules/table.njk" as tg %}
	{% import "modules/form.njk" as fg %}
	{% import "modules/heading.njk" as hg %}
	{% import "modules/modal.njk" as mg %}
	

	{%- set addBankingDepotButton=bg.modalButton("Add Depot", "#addBankingDepot") -%}
	{%- set deleteBankingDepotButton=bg.modalButton("Delete Depot", "#deleteBankingDepot") -%}
	{%- set addCryptoDepotButton=bg.modalButton("Add Depot", "#addCryptoDepot") -%}
	{%- set deleteCryptoDepotButton=bg.modalButton("Delete Depot", "#deleteCryptoDepot") -%}


	<div class="vs-1"></div>


	<div class="center-box">
        <div class="console" data-toggle="buttons">
        	<button class="console--button active" type="button" data-target=".console_stats">General</button>
        	<button class="console--button" type="button" data-target=".console_user">User</button>
        	{% if user.banking_is_active %}
        		<button class="console--button" type="button" data-target=".console_banking">Banking</button>
        	{% endif %}
            {% if user.crypto_is_active %}
        		<button class="console--button" type="button" data-target=".console_crypto">Crypto</button>
        	{% endif %}
        </div>
    </div>


	<div class="vs-3"></div>


	<div class="wrapper console-target console_general">
		{{ hg.smallLmHeading("General") }}
		<div class="lm-box">
			{{ fg.formGenerator(edit_user_general_form, url('users:edit_user_general', args=[user.slug]), csrf_token) }}
		</div> 

		{{ hg.smallLmHeading("Apps") }}
		<div class="lm-box">
			<div class="column">
				<div class="column--left">
					<h3 class="column--heading">Banking</h3>
					<div class="column--spacer"></div>
					<h3 class="column--heading">Crypto</h3>
				</div>
				<div class="column--right">
					{{ bg.hrefButton("Init", url("users:init_banking")) }}
					<div class="column--spacer"></div>
					{{ bg.hrefButton("Init", url("users:init_crypto")) }}
				</form>
				</div>
			</div>
		</div>
	</div>


	<div class="wrapper console-target console_user is-hidden">	
		{{ hg.smallLmHeading("@"+user.username) }}
		<div class="lm-box">
			{{ fg.formGenerator(edit_user_form, url('users:edit_user', args=[user.slug]), csrf_token) }}
		</div>

		{{ hg.smallLmHeading("Password") }}
		<div class="lm-box">
			{{ fg.formGenerator(edit_user_password_form, url('users:edit_user_password', args=[user.slug]), csrf_token) }}
		</div> 
	</div>


	<div class="wrapper console-target console_banking is-hidden">
	    {{ hg.smallLmHeading("Depots", buttons=[addBankingDepotButton, deleteBankingDepotButton]) }}
		<table class="table">
            {{ tg.head(["Depot", "Action"]) }}
            <tbody class="table--body">
                {% for depot in banking_depots %}
                    {% set tablebuttons %}
                        <div class="table--buttons">
                            {{ fg.setActiveButtonForm(depot, url("banking:set_depot", args=[depot.pk]), csrf_token) }}
                            <div class="hs-1"></div>
                            {{ bg.modalButton("Edit", "#editBankingDepot"+depot.pk|string) }}
                        </div>
                        {{ mg.djangoModal("Edit Depot", "editBankingDepot"+depot.pk|string, url("banking:edit_depot", args=[depot.pk])) }}
                    {% endset %}  
                    {{ tg.row([depot.name, tablebuttons]) }}
                {% endfor %}
            </tbody>
        </table>
	</div>


	<div class="wrapper console-target console_crypto is-hidden">
		{{ hg.smallLmHeading("General") }}
		<div class="lm-box">
			{{ fg.formGenerator(edit_user_crypto_form, url('users:edit_user_crypto', args=[user.slug]), csrf_token) }}
		</div> 
		
		{{ hg.smallLmHeading("Depots", buttons=[addCryptoDepotButton, deleteCryptoDepotButton]) }}
		<table class="table">
            {{ tg.head(["Depot", "Action"]) }}
            <tbody class="table--body">
                {% for depot in crypto_depots %}
                    {% set tablebuttons %}
                        <div class="table--buttons">
                            {{ fg.setActiveButtonForm(depot, url("crypto:set_depot", args=[depot.pk]), csrf_token) }}
                            <div class="hs-1"></div>
                            {{ bg.modalButton("Edit", "#editCryptoDepot"+depot.pk|string) }}
                        </div>
                        {{ mg.djangoModal("Edit Depot", "editCryptoDepot"+depot.pk|string, url("crypto:edit_depot", args=[depot.pk])) }}
                    {% endset %} 
                    {{ tg.row([depot.name, tablebuttons|safe]) }}
                {% endfor %}
            </tbody>
        </table>
	</div>

 
{% endblock %}

 
{% block modals %}
	{% import "modules/modal.njk" as mg %}
    {{ mg.djangoModal("Add Depot", "addCryptoDepot", url("crypto:add_depot")) }}
    {{ mg.djangoModal("Delete Depot", "deleteCryptoDepot", url("crypto:delete_depot")) }}
    {{ mg.djangoModal("Add Depot", "addBankingDepot", url("banking:add_depot")) }}
    {{ mg.djangoModal("Delete Depot", "deleteBankingDepot", url("banking:delete_depot")) }}
{% endblock %}