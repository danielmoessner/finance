{% extends "static/lm.njk" %}


{% set activePage="crypto" %}
{% set headingCategory="Asset" %}
{% set headingHeading=asset.get_name() %}
{% set title="Asset " + asset.get_name() + " | Crypto" %}


{% block head %}
	<script type="text/javascript" src="{{ static('js/line_chart_2_axes.js') }}" api-data="{{ url('crypto:api_data_asset', args=[asset.slug, ]) }}"></script>
{% endblock %}


{% block chart %}
	<div class="vs-3"></div>
    <canvas id="line_chart"></canvas>
    <div class="vs-3"></div>
    <hr class="hr"> 
{% endblock %}


{% block main %}


    {% import "modules/table.njk" as tg %}
    {% import "modules/button.njk" as bg %}
    {% import "modules/card.njk" as cg %}
   	{% import "modules/modal.njk" as mg %}


	{%- set addPriceButton=bg.modalButton("Add Price", "#addPrice") -%}
   	{%- set addTradeButton=bg.modalButton("Buy/Sell Asset", "#addTrade") -%}
   	{%- set addTransactionButton=bg.modalButton("Send/Receive Asset", "#addTransaction") -%}


	<div class="vs-1"></div>


	<div class="center-box">
            <div class="console" data-toggle="buttons">
                <label class="console--button active" data-target=".console_stats">
                    <input type="radio">Stats
                </label>
                <label class="console--button" data-target=".console_prices">
                    <input type="radio">Price History
                </label>
                <label class="console--button" data-target=".console_trades">
                    <input type="radio">Trades
                </label>
                <label class="console--button" data-target=".console_transactions">
                    <input type="radio">Transactions
                </label>
            </div>
    </div>

	
	<div class="vs-3"></div>

	
	<div class="wrapper console-target console_stats">
        {{ hg.smallLmHeading("Stats") }}
        <div class="vs-1"></div>
        <div class="items-box">
        	{%- set assetData = movie.get_values(user, ["cs", "g", "v", "cr"]) -%}
            {{ cg.statsCard("Invested Capital", assetData.cs, ext=user.currency) }}
            {{ cg.statsCard("Profit", assetData.g, ext=user.currency) }}
            {{ cg.statsCard("Value", assetData.v, ext=user.currency) }}
            {{ cg.statsCard("Current Return", assetData.cr, ext="%") }}
        </div>
		{% if timespan.start_date %}
			<div class="vs-3"></div>
			{{ hg.smallLmHeading(timespan.name) }}
			<div class="vs-1"></div>
			<div class="items-box">
				{% with data=movie.get_values(user, ["g", "cr", ], timespan) %}
					{%- set heading=data.start_date+"-"+data.end_date -%}
					{% set value %}
	                    Profit: {{ data.g }} <br>
	                    Current Return: {{ data.cr }}
	                {% endset %}
					{{ cg.statsCard(heading, value) }}
				{% endwith %}
			</div>
		{% endif %}
	</div>

	
	<div class="wrapper console-target is-hidden console_prices">
        {{ hg.smallLmHeading("Price history", buttons=[addPriceButton]) }}
		<table class="table ">
		    {{ tg.head(["Date", "Price"]) }}
		    <tbody class="table--body">
		        {% for price in prices %}
		            {{ tg.row([price.get_date(), price.price]) }}
		        {% endfor %}
		    </tbody>
		</table>
	</div>
	
	
	<div class="wrapper console-target is-hidden console_trades">
        {{ hg.smallLmHeading("Trades", buttons=[addTradeButton]) }}
		<table class="table">
		    {{ tg.head(["Date", "Account", "Buy", "Buy Asset", "Sell", "Sell Asset", "Fees", "Fees Asset", "Action"]) }}
		    <tbody class="table--body">
		        {% for trade in trades %}
		        	{% set tablebuttons %}
		                <div class="table--buttons">
		                    {{ bg.modalButton("Edit", "#editTrade"+trade.pk|string) }}
		                    <div class="hs-1"></div>
		                	{{ bg.modalButton("Delete", "#deleteTrade"+trade.pk|string) }}
		                </div> 
		                {{ mg.djangoModal("Edit Trade", "editTrade"+trade.pk|string, url("crypto:edit_trade", args=[trade.pk])) }}
		                {{ mg.djangoModal("Delete Trade", "deleteTrade"+trade.pk|string, url("crypto:delete_trade", args=[trade.pk])) }}
		            {% endset %}
		            {{ tg.row([trade.get_date(), trade.account, trade.buy_amount, trade.buy_asset, trade.sell_amount, trade.sell_asset, trade.fees, trade.fees_asset, tablebuttons|safe]) }}
		        {% endfor %}
		    </tbody>
		</table>
	</div>
	

	<div class="wrapper console-target is-hidden console_transactions">
		{{ hg.smallLmHeading("Transactions", buttons=[addTransactionButton]) }}
		<table class="table">
		    {{ tg.head(["Date", "Asset", "From Account", "To Account", "Amount", "Fees", "Action"]) }}
		    <tbody class="table--body">
		        {% for transaction in transactions %}
		        	{% set tablebuttons %}
		                <div class="table--buttons">
		             		{{ bg.modalButton("Edit", "#editTransaction"+transaction.pk|string) }}
		                    <div class="hs-1"></div>
		                	{{ bg.modalButton("Delete", "#deleteTransaction"+transaction.pk|string) }}
		                </div>
		                {{ mg.djangoModal("Edit Transaction", "editTransaction"+transaction.pk|string, url("crypto:edit_transaction", args=[transaction.pk])) }}
		                {{ mg.djangoModal("Delete Transaction", "deleteTransaction"+transaction.pk|string, url("crypto:delete_transaction", args=[transaction.pk])) }}
		            {% endset %}
		            {{ tg.row([transaction.get_date(), transaction.asset, transaction.from_account, transaction.to_account, transaction.amount, transaction.fees, tablebuttons|safe]) }}
		        {% endfor %}
		    </tbody>
		</table>
	</div>

	
{% endblock %}


{% block modals %}
	{% import "modules/modal.njk" as mg %}
    {{ mg.djangoModal("Add Trade", "addTrade", url("crypto:add_trade")) }}
    {{ mg.djangoModal("Add Transaction", "addTransaction", url("crypto:add_transaction")) }}
{% endblock %}
