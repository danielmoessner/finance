{% extends "layout/lm.njk" %}

{% set headingCategory="User" %}
{% set headingHeading="Hello "+user.username %}
{% set title="Settings" %}

{% import "modules/button.njk" as bg %}
{% import "modules/form.njk" as fg %}
{% import "modules/heading.njk" as hg %}
{% import "modules/modal.njk" as mg %}

{% block main %}

    <div class="d-flex justify-content-center mt-2 mb-5">
        <div class="btn-group" role="group" aria-label="Console">
            {{ bg.hrefButton("Start", request.path + '?tab=stats', active=(tab=='stats')) }}
            {{ bg.hrefButton("Banking", request.path + '?tab=banking', active=(tab=='banking')) }}
            {{ bg.hrefButton("Crypto", request.path + '?tab=crypto', active=(tab=='crypto')) }}
            {{ bg.hrefButton("Alternative", request.path + '?tab=alternative', active=(tab=='alternative')) }}
        </div>
    </div>

    {% if tab=="stats" %}
        <div class="rounded bg-dark p-3">
            <div class="mb-4">
                <dl class="row mb-0">
                    <dt class="col-12 col-sm-4 mb-sm-1">Username:</dt>
                    <dd class="col-12 col-sm-8 mb-2 mb-sm-1">{{ user.username }}</dd>
                    <dt class="col-12 col-sm-4 mb-sm-1">E-Mail:</dt>
                    <dd class="col-12 col-sm-8 mb-2 mb-sm-1">{{ user.email }}</dd>
                    <dt class="col-12 col-sm-4 mb-sm-1">Frontpage:</dt>
                    <dd class="col-12 col-sm-8 mb-2 mb-sm-1">{{ user.get_front_page_display() }}</dd>
                    <dt class="col-12 col-sm-4 mb-sm-1">Dateformat:</dt>
                    <dd class="col-12 col-sm-8 mb-2 mb-sm-1">{{ user.get_date_format_display() }}</dd>
                </dl>
            </div>
            <div class="d-flex">
                {{ mg.djangoModal("Edit Username & E-Mail", "editUser", url('users:edit_user', args=[user.pk])) }}
                {{ bg.modalButton("Edit Username & E-Mail", "#editUser", classes="mr-1") }}
                {{ mg.djangoModal("Edit Password", "editPassword", url('users:edit_user_password', args=[user.pk])) }}
                {{ bg.modalButton("Edit Passwort", "#editPassword", classes="mr-1") }}
                {{ mg.djangoModal("Edit Preferences", "editPreferences", url('users:edit_user_general', args=[user.pk])) }}
                {{ bg.modalButton("Edit Preferences", "#editPreferences") }}
            </div>
        </div>
    {% endif %}

    {% if tab=="banking" %}
        <table class="table table-dark table-responsive-md rounded">
            <thead>
            <tr>
                <th class="border-0" scope="col">Depot</th>
                <th class="border-0" scope="col">Action</th>
            </tr>
            </thead>
            <tbody>
            {% for depot in banking_depots %}
                <tr>
                    <td>{{ depot.name }}</td>
                    <td>
                        <div class="d-flex">
                            {{ bg.hrefButton(text="Set Active", url=url("banking:set_depot", args=[depot.pk]), disabled=(depot.is_active)) }}
                            {{ mg.djangoModal("Edit Depot", "editBankingDepot"+depot.pk|string, url("banking:edit_depot", args=[depot.pk])) }}
                            {{ bg.modalButton("Edit", "#editBankingDepot"+depot.pk|string) }}
                        </div>
                    </td>
                </tr>
            {% endfor %}
            <tr>
                <td colspan="2">
                    <div class="d-flex">
                        {{ mg.djangoModal("Add Depot", "addBankingDepot", url("banking:add_depot")) }}
                        {{ bg.modalButton("Add Depot", "#addBankingDepot") }}
                        {{ mg.djangoModal("Delete Depot", "deleteBankingDepot", url("banking:delete_depot")) }}
                        {{ bg.modalButton("Delete Depot", "#deleteBankingDepot") }}
                        {{ bg.hrefButton("Generate example depot", url("users:init_banking", args=[user.pk])) }}
                    </div>
                </td>
            </tr>
            </tbody>
        </table>
    {% endif %}

    {% if tab=="crypto" %}
        <table class="table table-dark table-responsive-md rounded">
            <thead>
            <tr>
                <th class="border-0" scope="col">Depot</th>
                <th class="border-0" scope="col">Action</th>
            </tr>
            </thead>
            <tbody>
            {% for depot in crypto_depots %}
                <tr>
                    <td>{{ depot.name }}</td>
                    <td>
                        <div class="d-flex">
                            {{ bg.hrefButton(text="Set Active", url=url("crypto:set_depot", args=[depot.pk]), disabled=(depot.is_active)) }}
                            {{ mg.djangoModal("Edit Depot", "editCryptoDepot"+depot.pk|string, url("crypto:edit_depot", args=[depot.pk])) }}
                            {{ bg.modalButton("Edit", "#editCryptoDepot"+depot.pk|string) }}
                        </div>
                    </td>
                </tr>
            {% endfor %}
            <tr>
                <td colspan="2">
                    <div class="d-flex">
                        {{ mg.djangoModal("Add Depot", "addCryptoDepot", url("crypto:add_depot")) }}
                        {{ bg.modalButton("Add Depot", "#addCryptoDepot") }}
                        {{ mg.djangoModal("Delete Depot", "deleteCryptoDepot", url("crypto:delete_depot")) }}
                        {{ bg.modalButton("Delete Depot", "#deleteCryptoDepot") }}
                        {{ bg.hrefButton("Generate example depot", url("users:init_crypto", args=[user.pk])) }}
                    </div>
                </td>
            </tr>
            </tbody>
        </table>
    {% endif %}

    {% if tab=="alternative" %}
        <table class="table table-dark table-responsive-md rounded">
            <thead>
            <tr>
                <th class="border-0" scope="col">Depot</th>
                <th class="border-0" scope="col">Action</th>
            </tr>
            </thead>
            <tbody>
            {% for depot in alternative_depots %}
                <tr>
                    <td>{{ depot.name }}</td>
                    <td>
                        <div class="d-flex">
                            {{ bg.hrefButton(text="Set Active", url=url("alternative:set_depot", args=[depot.pk]), disabled=(depot.is_active)) }}
                            {{ mg.djangoModal("Edit Depot", "editAlternativeDepot"+depot.pk|string, url("alternative:edit_depot", args=[depot.pk])) }}
                            {{ bg.modalButton("Edit", "#editAlternativeDepot"+depot.pk|string) }}
                        </div>
                    </td>
                </tr>
            {% endfor %}
            <tr>
                <td colspan="2">
                    <div class="d-flex">
                        {{ mg.djangoModal("Add Depot", "addAlternativeDepot", url("alternative:add_depot")) }}
                        {{ bg.modalButton("Add Depot", "#addAlternativeDepot") }}
                        {{ mg.djangoModal("Delete Depot", "deleteAlternativeDepot", url("alternative:delete_depot")) }}
                        {{ bg.modalButton("Delete Depot", "#deleteAlternativeDepot") }}
                        {{ bg.hrefButton("Generate example depot", url("users:init_alternative", args=[user.pk])) }}
                    </div>
                </td>
            </tr>
            </tbody>
        </table>
    {% endif %}

{% endblock %}
